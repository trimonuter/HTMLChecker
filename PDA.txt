main html /html head /head
< h t m l / >
< h t m l / >
main
Z
E
# ========================= State: html =========================
main < Z main Z
main h Z html tml><head></head><body></body></html>Z
# Handling: Whitespace
main W Z main Z
# Handling: Comment
main ! Z main --CMBZ
main - - main $
main - C main $
main - M main $
main % C main C
main > B main $
# Handling: Reset Comment
main % M main CM
main % B main CMB
# ========================= State: html =========================
html t t html $
html m m html $
html l l html $
html > > html $
# PDA Logic: Global Attributes
html W > html G>
# ID
html i G html d="A
html d d html $
html = = html $
html " " html $
html " A html $
html % A html A
# Class
html c G html lass="A
html c G html lass="A
html l l html $
html a a html $
html s s html $
# Style
html s G html tyle="A
html s G html tyle="A
html t t html $
html y y html $
html l l html $
html e e html $
# Handling: Comment
html ! h html --CMB<h
html - - html $
html - C html $
html - M html $
html % C html C
html > B html $
# Handling: Reset Comment
html % M html CM
html % B html CMB
# Transition: html --> head
html < < html $
html h h head $
# ========================= State: head =========================
head < < head $
head h h head $
head e e head $
head a a head $
head d d head $
head > > head $
# PDA Logic: Global Attributes
head W > head G>
# ID
head i G head d="A
head d d head $
head = = head $
head " " head $
head " A head $
head % A head A
# Class
head c G head lass="A
head c G head lass="A
head l l head $
head a a head $
head s s head $
# Style
head s G head tyle="A
head s G head tyle="A
head t t head $
head y y head $
head l l head $
head e e head $
# Handling: Comment
head ! / head --CMB</
head - - head $
head - C head $
head - M head $
head % C head C
head > B head $
# Handling: Reset Comment
head % M head CM
head % B head CMB
# Transition: head --> title
head t / title itle></title></
# Transition: head --> link
head l / link inkW></
# Transition: head --> script
head s / script cript></script></
# Transition: head --> /head
head / / /head $
# ========================= State: link =========================
link < < link $
link i i link $
link n n link $
link k k link $
# PDA Logic: Additional Attributes
# Rel
link W W link rel="A
link W W link rel="A
link r r link $
link e e link $
link l l link $
link = = link $
link " " link $
link " A link $
link " A link $
link % A link A
# PDA Logic: Optional Attributes
link W > link G>
# Alt
link h G link ref="A
link h G link ref="A
link r r link $
link e e link $
link f f link $
# PDA Logic: Global Attributes
# ID
link i G link d="A
link d d link $
link = = link $
link " " link $
link " A link $
link % A link A
# Class
link c G link lass="A
link c G link lass="A
link l l link $
link a a link $
link s s link $
# Style
link s G link tyle="A
link s G link tyle="A
link t t link $
link y y link $
link l l link $
link e e link $
# Transition: link --> head
link > > head $
# ========================= State: script =========================
script < < script $
script s s script $
script c c script $
script r r script $
script i i script $
script p p script $
script t t script $
# PDA Logic: Optional Attributes
script W > script G>
# Src
script s G script rc="A
script s G script rc="A
script r r script $
script c c script $
script = = script $
script " " script $
script " A script $
script " A script $
script % A script A
# PDA Logic: Global Attributes
# ID
script i G script d="A
script d d script $
script = = script $
script " " script $
script " A script $
script % A script A
# Class
script c G script lass="A
script c G script lass="A
script l l script $
script a a script $
script s s script $
# Style
script s G script tyle="A
script s G script tyle="A
script t t script $
script y y script $
script l l script $
script e e script $
# Logic: <em>
script e / script m></em></
script m m script $
# Logic: <b>
script b / script ></b></
# Logic: <abbr>
script a / script bbr></abbr></
script b b script $
script r r script $
# Logic: <strong>
script s / script $
script t t script $
script r i script ong></strong></ti
script o o script $
script n n script $
script g g script $
# Logic: <small>
script m t script all></small></t
script a a script $
script l l script $
# Handling: Comment
script ! / script --CMB</
script - - script $
script - C script $
script - M script $
script % C script C
script > B script $
# Handling: Reset Comment
script % M script CM
script % B script CMB
# Transition: script --> /scriptTemp
script > > script $
script / / /scriptTemp $
# ========================= State: /scriptTemp =========================
/scriptTemp s s /scriptTemp $
/scriptTemp c c /script $
/scriptTemp % % script $
# ========================= State: /script =========================
/script < < /script $
/script / / /script $
/script s s /script $
/script c c /script $
/script r r /script $
/script i i /script $
/script p p /script $
/script t t /script $
# Transition: /script --> head
/script > > head $
# ========================= State: title =========================
title < < title $
title t t title $
title i i title $
title t t title $
title l l title $
title e e title $
# PDA Logic: Global Attributes
title W > title G>
# ID
title i G title d="A
title d d title $
title = = title $
title " " title $
title " A title $
title % A title A
# Class
title c G title lass="A
title c G title lass="A
title l l title $
title a a title $
title s s title $
# Style
title s G title tyle="A
title s G title tyle="A
title t t title $
title y y title $
title l l title $
title e e title $
# Logic: <em>
title e / title m></em></
title m m title $
# Logic: <b>
title b / title ></b></
# Logic: <abbr>
title a / title bbr></abbr></
title b b title $
title r r title $
# Logic: <strong>
title s / title $
title t t title $
title r i title ong></strong></ti
title o o title $
title n n title $
title g g title $
# Logic: <small>
title m t title all></small></t
title a a title $
title l l title $
# Handling: Comment
title ! / title --CMB</
title - - title $
title - C title $
title - M title $
title % C title C
title > B title $
# Handling: Reset Comment
title % M title CM
title % B title CMB
# Transition: title --> /titleTemp
title > > title $
title / / /titleTemp $
# ========================= State: /titleTemp =========================
/titleTemp t t /title $
/titleTemp % % title $
# ========================= State: /title =========================
/title < < /title $
/title / / /title $
/title t t /title $
/title i i /title $
/title t t /title $
/title l l /title $
/title e e /title $
# Transition: /title --> head
/title > > head $
# ========================= State: /head =========================
/head < < /head $
/head / / /head $
/head h h /head $
/head e e /head $
/head a a /head $
/head d d /head $
# Handling: Comment
/head ! / /head --CMB</
/head - - /head $
/head - C /head $
/head - M /head $
/head % C /head C
/head > B /head $
# Handling: Reset Comment
/head % M /head CM
/head % B /head CMB
# Transition: /head --> body
/head > > body $
# ========================= State: body =========================
body < < body $
body b b body $
body o o body $
body d d body $
body y y body $
body > > body $
# Transition: body --> /bodyTemp
body < < body $
body / / /bodyTemp $
# PDA Logic: Global Attributes
body W > body G>
# ID
body i G body d="A
body d d body $
body = = body $
body " " body $
body " A body $
body % A body A
# Class
body c G body lass="A
body c G body lass="A
body l l body $
body a a body $
body s s body $
# Style
body s G body tyle="A
body s G body tyle="A
body t t body $
body y y body $
body l l body $
body e e body $
# PDA Logic: <p>
body p / body ></p></
# PDA Logic: <h1>, <h2>, ..., <h6>
body h / body h
body 1 h body ></h1></
body 1 1 body $
body 2 h body ></h2></
body 2 2 body $
body 3 h body ></h3></
body 3 3 body $
body 4 h body ></h4></
body 4 4 body $
body 5 h body ></h5></
body 5 5 body $
body 6 h body ></h6></
body 6 6 body $
# PDA Logic: <hr>
body r h body ></
# PDA Logic: <br>
body < < body $
body b / format F
# Transition: body --> a
body < < body $
body a / format A
# Transition: body --> img
body < < body $
body i / format I
# Transition: body --> form
body < < body $
body f / form orm></form></
# Transition: body --> input
body < < body $
body i / format I
# Transition: body --> table
body < < body $
body t / table able></table></
# Transition: body --> link
body < < body $
body l / linkBody inkW></
# PDA Logic: <div>
body < < body $
body d / body iv></div></
body i i body $
body v v body $
# PDA Logic: <b>
body b / format F
# PDA Logic: <abbr>
body a / format F
# PDA Logic: <em>
body < < body $
body e / body m></em></
body e e body $
body m m body $
# PDA Logic: <strong>
body < < body $
body s / format F
body r r body $
body o o body $
body n n body $
body g g body $
# PDA Logic: <small>
body s / format F
body a a body $
body l l body $
# PDA Logic: </button>
body b b body $
body u u body $
body t t body $
body o o body $
body n n body $
# Handling: Comment
body ! / body --CMB</
body ! b body --CMB<b
body - - body $
body - C body $
body - M body $
body % C body C
body > B body $
# Handling: Reset Comment
body % M body CM
body % B body CMB
# ========================= State: format =========================
# Logic: <a>
format > A body </a></
format W A a G></a></
# Logic: <abbr>
format b A body br></abbr></
# Logic: <b>
format > F body </b></
# Logic: <br>
format r F body ></
# Logic: <button>
format u F button tton></button></
# Logic: <strong>
format t F body rong></strong></
# Logic: <small>
format m F body all></small></
# Logic: <script>
format c F scriptBody ript></script></
# Logic: <img>
format m I img gWsrc="A></
format m I img gWsrc="A></
# Logic: <input>
format n I input put></
# ========================= State: /bodyTemp =========================
/bodyTemp b b /bodyTemp $
/bodyTemp o o /body $
/bodyTemp % % body $
# ========================= State: a =========================
a < < a $
a a a a $
# PDA Logic: Additional Attributes
a W > a G>
# Href
a h G a ref="A
a r r a $
a e e a $
a f f a $
a = = a $
a " " a $
a " A a $
# PDA Logic: Global Attributes
# ID
a i G a d="A
a d d a $
a = = a $
a " " a $
a " A a $
a % A a A
# Class
a c G a lass="A
a c G a lass="A
a l l a $
a a a a $
a s s a $
# Style
a s G a tyle="A
a s G a tyle="A
a t t a $
a y y a $
a l l a $
a e e a $
# Transition: a --> body
a > > body $
# ========================= State: /a =========================
# /a < < /a $
# /a / / /a $
# /a a a /a $
# /a > > body $
# ========================= State: img =========================
img < < img $
img i i img $
img m m img $
img g g img $
# PDA Logic: Additional Attributes
# Src
img W W img $
img s s img $
img r r img $
img c c img $
img = = img $
img " " img $
img " A img $
img " A img $
img % A img A
# PDA Logic: Optional Attributes
img W > img G>
# Alt
img a G img lt="A
img a G img lt="A
img l l img $
img t t img $
# PDA Logic: Global Attributes
# ID
img i G img d="A
img d d img $
img = = img $
img " " img $
img " A img $
img % A img A
# Class
img c G img lass="A
img c G img lass="A
img l l img $
img a a img $
img s s img $
# Style
img s G img tyle="A
img s G img tyle="A
img t t img $
img y y img $
img l l img $
img e e img $
# Transition: img --> body
img > > body $
# ========================= State: button =========================
button < < button $
button b b button $
button u u button $
button t t button $
button o o button $
button n n button $
# PDA Logic: Additional Attributes
button W > button G>
# Type
button t G button ype="T
button y y button $
button p p button $
button e e button $
button = = button $
button " " button $
# Type: submit
button s T button ubmit"
button u u button $
button b b button $
button m m button $
button i i button $
button t t button $
# Type: reset
button r T button eset"
button r T button eset"
button e e button $
button s s button $
button t t button $
# Type: button
button b T button utton"
button b T button utton"
button u u button $
button t t button $
button o o button $
button n n button $
# PDA Logic: Global Attributes
button W > button G>
# ID
button i G button d="A
button d d button $
button = = button $
button " " button $
button " A button $
button % A button A
# Class
button c G button lass="A
button c G button lass="A
button l l button $
button a a button $
button s s button $
# Style
button s G button tyle="A
button s G button tyle="A
button t t button $
button y y button $
button l l button $
button e e button $
# Transition: button --> body
button > > body $
# ========================= State: form =========================
form < < form $
form f f form $
form o o form $
form r r form $
form m m form $
# PDA Logic: Additional Attributes
form W > form G>
# Action
form a G form ction="A
form c c form $
form t t form $
form i i form $
form o o form $
form n n form $
form = = form $
form " " form $
form " A form $
form % A form A
# Method
form m G form ethod="M
form e e form $
form t t form $
form h h form $
form o o form $
form d d form $
form = = form $
form " " form $
# Method: get
form g M form et"
form e e form $
form t t form $
# Method: post
form p M form ost"
form p M form ost"
form o o form $
form s s form $
form t t form $
# PDA Logic: Global Attributes
form W > form G>
# ID
form i G form d="A
form d d form $
form = = form $
form " " form $
form " A form $
form % A form A
# Class
form c G form lass="A
form c G form lass="A
form l l form $
form a a form $
form s s form $
# Style
form s G form tyle="A
form s G form tyle="A
form t t form $
form y y form $
form l l form $
form e e form $
# Transition: form --> /form
form > > body $
# ========================= State: /form =========================
# /form < < /form $
# /form / / /form $
# /form f f /form $
# /form o o /form $
# /form r r /form $
# /form m m /form $
# /form > > body $
# ========================= State: input =========================
input < < input $
input i i input $
input n n input $
input p p input $
input u u input $
input t t input $
# PDA Logic: Optional Attributes
input W > input G>
# Type
input t G input ype="T
input t G input ype="T
input y y input $
input p p input $
input e e input $
# Type: text
input t T input ext"
input t T input ext"
input e e input $
input x x input $
input t t input $
# Type: password
input p T input assword"
input p T input assword"
input a a input $
input s s input $
input w w input $
input o o input $
input r r input $
input d d input $
# Type: email
input e T input mail"
input e T input mail"
input m m input $
input a a input $
input i i input $
input l l input $
# Type: number
input n T input umber"
input n T input umber"
input u u input $
input m m input $
input b b input $
input e e input $
input r r input $
# Type: checkbox
input c T input heckbox"
input c T input heckbox"
input h h input $
input e e input $
input c c input $
input k k input $
input b b input $
input o o input $
input x x input $
# PDA Logic: Global Attributes
# ID
input i G input d="A
input d d input $
input = = input $
input " " input $
input " A input $
input % A input A
# Class
input c G input lass="A
input c G input lass="A
input l l input $
input a a input $
input s s input $
# Style
input s G input tyle="A
input s G input tyle="A
input t t input $
input y y input $
input l l input $
input e e input $
# Transition: input --> body
input > > body $
# ========================= State: table =========================
table < < table $
table t t table $
table a a table $
table b b table $
table l l table $
table e e table $
# PDA Logic: Global Attributes
table W > table G>
# ID
table i G table d="A
table d d table $
table = = table $
table " " table $
table " A table $
table % A table A
# Class
table c G table lass="A
table c G table lass="A
table l l table $
table a a table $
table s s table $
# Style
table s G table tyle="A
table s G table tyle="A
table t t table $
table y y table $
table l l table $
table e e table $
# Transition: table --> /table
table > > /table $
# ========================= State: /table =========================
/table < < /table $
/table / / /table $
/table t t /table $
/table a a /table $
/table b b /table $
/table l l /table $
/table e e /table $
/table > > body $
# Transition: /table --> tr
/table t / tr r></tr></
# Handling: Comment
/table ! / /table --CMB</
/table - - /table $
/table - C /table $
/table - M /table $
/table % C /table C
/table > B /table $
# Handling: Reset Comment
/table % M /table CM
/table % B /table CMB
# ========================= State: tr =========================
tr < < tr $
tr t t tr $
tr r r tr $
tr > > /tr $
# PDA Logic: Global Attributes
tr W > tr G>
# ID
tr i G tr d="A
tr d d tr $
tr = = tr $
tr " " tr $
tr " A tr $
tr % A tr A
# Class
tr c G tr lass="A
tr c G tr lass="A
tr l l tr $
tr a a tr $
tr s s tr $
# Style
tr s G tr tyle="A
tr s G tr tyle="A
tr t t tr $
tr y y tr $
tr l l tr $
tr e e tr $
# ========================= State: /tr =========================
/tr < < /tr $
/tr / / /tr $
/tr t t /tr $
/tr r r /tr $
/tr > > /table $
# Transition: /tr --> td
/tr t / /tr /
/tr d / td ></td></
# Transition: /tr --> th
/tr h / th ></th></
# Handling: Comment
/tr ! / /tr --CMB</
/tr - - /tr $
/tr - C /tr $
/tr - M /tr $
/tr % C /tr C
/tr > B /tr $
# Handling: Reset Comment
/tr % M /tr CM
/tr % B /tr CMB
# ========================= State: td =========================
td < < td $
td t t td $
td d d td $
# PDA Logic: Global Attributes
td W > td G>
# ID
td i G td d="A
td d d td $
td = = td $
td " " td $
td " A td $
td % A td A
# Class
td c G td lass="A
td c G td lass="A
td l l td $
td a a td $
td s s td $
# Style
td s G td tyle="A
td s G td tyle="A
td t t td $
td y y td $
td l l td $
td e e td $
# Logic: <em>
td e / td m></em></
td m m td $
# Logic: <b>
td b / td ></b></
# Logic: <abbr>
td a / td bbr></abbr></
td b b td $
td r r td $
# Logic: <strong>
td s / td $
td t t td $
td r d td ong></strong></td
td o o td $
td n n td $
td g g td $
# Logic: <small>
td m t td all></small></t
td a a td $
td l l td $
# Handling: Comment
td ! / td --CMB</
td - - td $
td - C td $
td - M td $
td % C td C
td > B td $
# Handling: Reset Comment
td % M td CM
td % B td CMB
# Transition: td --> /td
td > > td $
td / / /tdTemp $
# ========================= State: /tdTemp =========================
/tdTemp t t /td $
/tdTemp % % td $
# ========================= State: /td =========================
/td < < /td $
/td / / /td $
/td t t /td $
/td d d /td $
/td > > /tr $
# ========================= State: th =========================
th < < th $
th t t th $
th h h th $
th > > th $
# PDA Logic: Global Attributes
th W > th G>
# ID
th i G th d="A
th d d th $
th = = th $
th " " th $
th " A th $
th % A th A
# Class
th c G th lass="A
th c G th lass="A
th l l th $
th a a th $
th s s th $
# Style
th s G th tyle="A
th s G th tyle="A
th t t th $
th y y th $
th l l th $
th e e th $
# Logic: <em>
th e / th m></em></
th m m th $
# Logic: <b>
th b / th ></b></
# Logic: <abbr>
th a / th bbr></abbr></
th b b th $
th r r th $
# Logic: <strong>
th s / th $
th t t th $
th r h th ong></strong></th
th o o th $
th n n th $
th g g th $
# Logic: <small>
th m t th all></small></t
th a a th $
th l l th $
# Handling: Comment
th ! / th --CMB</
th - - th $
th - C th $
th - M th $
th % C th C
th > B th $
# Handling: Reset Comment
th % M th CM
th % B th CMB
# Transition: th --> /th
th > > th $
th / / /thTemp $
# ========================= State: /thTemp =========================
/thTemp t t /th $
/thTemp % % th $
# ========================= State: /th =========================
/th < < /th $
/th / / /th $
/th t t /th $
/th h h /th $
/th > > /tr $
# ========================= State: linkBody =========================
linkBody < < linkBody $
linkBody i i linkBody $
linkBody n n linkBody $
linkBody k k linkBody $
# PDA Logic: Additional Attributes
# Rel
linkBody W W linkBody rel="A
linkBody W W linkBody rel="A
linkBody r r linkBody $
linkBody e e linkBody $
linkBody l l linkBody $
linkBody = = linkBody $
linkBody " " linkBody $
linkBody " A linkBody $
linkBody " A linkBody $
linkBody % A linkBody A
# PDA Logic: Optional Attributes
linkBody W > linkBody G>
# Alt
linkBody h G linkBody ref="A
linkBody h G linkBody ref="A
linkBody r r linkBody $
linkBody e e linkBody $
linkBody f f linkBody $
# PDA Logic: Global Attributes
# ID
linkBody i G linkBody d="A
linkBody d d linkBody $
linkBody = = linkBody $
linkBody " " linkBody $
linkBody " A linkBody $
linkBody % A linkBody A
# Class
linkBody c G linkBody lass="A
linkBody c G linkBody lass="A
linkBody l l linkBody $
linkBody a a linkBody $
linkBody s s linkBody $
# Style
linkBody s G linkBody tyle="A
linkBody s G linkBody tyle="A
linkBody t t linkBody $
linkBody y y linkBody $
linkBody l l linkBody $
linkBody e e linkBody $
# Transition: linkBody --> body
linkBody > > body $
# ========================= State: scriptBody =========================
scriptBody < < scriptBody $
scriptBody s s scriptBody $
scriptBody c c scriptBody $
scriptBody r r scriptBody $
scriptBody i i scriptBody $
scriptBody p p scriptBody $
scriptBody t t scriptBody $
# PDA Logic: Optional Attributes
scriptBody W > scriptBody G>
# Src
scriptBody s G scriptBody rc="A
scriptBody s G scriptBody rc="A
scriptBody r r scriptBody $
scriptBody c c scriptBody $
scriptBody = = scriptBody $
scriptBody " " scriptBody $
scriptBody " A scriptBody $
scriptBody " A scriptBody $
scriptBody % A scriptBody A
# PDA Logic: Global Attributes
# ID
scriptBody i G scriptBody d="A
scriptBody d d scriptBody $
scriptBody = = scriptBody $
scriptBody " " scriptBody $
scriptBody " A scriptBody $
scriptBody % A scriptBody A
# Class
scriptBody c G scriptBody lass="A
scriptBody c G scriptBody lass="A
scriptBody l l scriptBody $
scriptBody a a scriptBody $
scriptBody s s scriptBody $
# Style
scriptBody s G scriptBody tyle="A
scriptBody s G scriptBody tyle="A
scriptBody t t scriptBody $
scriptBody y y scriptBody $
scriptBody l l scriptBody $
scriptBody e e scriptBody $
# Logic: <em>
scriptBody e / scriptBody m></em></
scriptBody m m scriptBody $
# Logic: <b>
scriptBody b / scriptBody ></b></
# Logic: <abbr>
scriptBody a / scriptBody bbr></abbr></
scriptBody b b scriptBody $
scriptBody r r scriptBody $
# Logic: <strong>
scriptBody s / scriptBody $
scriptBody t t scriptBody $
scriptBody r i scriptBody ong></strong></ti
scriptBody o o scriptBody $
scriptBody n n scriptBody $
scriptBody g g scriptBody $
# Logic: <small>
scriptBody m t scriptBody all></small></t
scriptBody a a scriptBody $
scriptBody l l scriptBody $
# Handling: Comment
scriptBody ! / scriptBody --CMB</
scriptBody - - scriptBody $
scriptBody - C scriptBody $
scriptBody - M scriptBody $
scriptBody % C scriptBody C
scriptBody > B scriptBody $
# Handling: Reset Comment
scriptBody % M scriptBody CM
scriptBody % B scriptBody CMB
# Transition: scriptBody --> /scriptBody
scriptBody > > scriptBody $
scriptBody / / /scriptTempBody $
# ========================= State: /scriptTempBody =========================
/scriptTempBody s s /scriptTempBody $
/scriptTempBody c c /scriptBody $
/scriptTempBody % % scriptBody $
# ========================= State: /scriptBody =========================
/scriptBody < < /scriptBody $
/scriptBody / / /scriptBody $
/scriptBody s s /scriptBody $
/scriptBody c c /scriptBody $
/scriptBody r r /scriptBody $
/scriptBody i i /scriptBody $
/scriptBody p p /scriptBody $
/scriptBody t t /scriptBody $
# Transition: /scriptBody --> body
/scriptBody > > body $
# ========================= State: /body =========================
/body b b /body $
/body o o /body $
/body d d /body $
/body y y /body $
# Handling: Comment
/body ! / /body --CMB</
/body - - /body $
/body - C /body $
/body - M /body $
/body % C /body C
/body > B /body $
# Handling: Reset Comment
/body % M /body CM
/body % B /body CMB
# Transition: /body --> /html
/body > > /body $
/body < < /body $
/body / / /html $
# ========================= State: /html =========================
/html / / /html $
/html h h /html $
/html t t /html $
/html m m /html $
/html l l /html $
/html > > /html $
# Handling: Comment
/html < Z /html !--CMBZ
/html ! ! /html $
/html - - /html $
/html - C /html $
/html - M /html $
/html % C /html C
/html > B /html $
# Handling: Reset Comment
/html % M /html CM
/html % B /html CMB